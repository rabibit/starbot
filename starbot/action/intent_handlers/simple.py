from .handler import BaseHandler
from typing import Text, Dict, Any, List
from rasa_sdk.executor import CollectingDispatcher, Tracker


class SimpleHandler(BaseHandler):
    responses = {
        'account_issues': '...',
        'air_conditioner_problem': '...',
        'any_other?': '...',
        'ask_for_awaking': '...',
        'ask_for_changing_room': '...',
        'ask_for_charger': '...',
        'ask_for_help': '...',
        'ask_for_laundry': '...',
        'ask_for_more_breakfast_ticket': '...',
        'ask_for_phone_number': '...',
        'ask_for_price': '...',
        'ask_for_something_to_eat': '...',
        'ask_for_traffic_info': '...',
        'ask_for_wifi_info': '...',
        'ask_for_wifi_password': '...',
        'ask_how_to_pay': '...',
        'ask_if_ferry': '...',
        'ask_price_for_changing_room': '...',
        'ask_to_change_thing': '...',
        'ask_to_clean_room': '...',
        'ask_to_open_door': '...',
        'book_room': '...',
        'breakfast_ticket_not_found': '...',
        'buy_or_borrow': '...',
        'bye': '...',
        'can_deliver?': '...',
        'can_i_have_invoice': '...',
        'can_order_meal': '...',
        'cancel_book_room': '...',
        'change_info': '...',
        'checkout': '...',
        'complain': '...',
        'confirm_extend_condition': '...',
        'confirm_location': '...',
        'consultation': '...',
        'delay_checkin': '...',
        'enha': '...',
        'fetch_it_myself?': '...',
        'greet': '...',
        'hmm': '...',
        'how_far?': '...',
        'how_much_did_i_spend': '...',
        'how_much_if_stay_until': '...',
        'how_to_call': '...',
        'info': '...',
        'is_breakfast_included': '...',
        'is_it_free': '...',
        'is_it_ok': '...',
        'is_manager_there': '...',
        'is_my_cloth_ready': '...',
        'is_my_room_ready': '...',
        'is_there_any_massage': '...',
        'is_there_breakfast_now': '...',
        'is_there_cloth_drier': '...',
        'is_there_night_snack': '...',
        'is_there_xxx': '...',
        'is_there_xxx_around': '...',
        'is_vip_the_same': '...',
        'lack_of_thing': '...',
        'laundry_request': '...',
        'leave_over_something': '...',
        'network_problem': '...',
        'no': '...',
        'not_found': '...',
        'number_of_thing': '...',
        'ok': '...',
        'order_something': '...',
        'other': '...',
        'other_issue_needs_service': '...',
        'query_agreement_price': '...',
        'query_book_record': '...',
        'query_checkout_time': '...',
        'query_supper_time': '...',
        'repeat_confirm': '...',
        'room_available': '...',
        'something_like': '...',
        'stay_extension': '...',
        'this_phone': '...',
        'tv_problem': '...',
        'urge': '...',
        'wanna_more': '...',
        'what_can_you_do': '...',
        'when_to_have_breakfast': '...',
        'when_to_have_lunch': '...',
        'where_is_laundry_room': '...',
        'where_is_the_wenxiang': '...',
        'where_is_tv_controller': '...',
        'where_to_have_breakfast': '...',
    }

    def match(self, tracker: Tracker, domain: Dict[Text, Any]) -> bool:
        return self.get_last_user_intent(tracker) in self.responses

    def process(self,
                dispatcher: CollectingDispatcher,
                tracker: Tracker,
                domain: Dict[Text, Any]) -> List[Dict[Text, Any]]:
        intent = self.get_last_user_intent(tracker)
        dispatcher.utter_message(self.responses.get(intent, 'What?'))
        return []
